name: build-and-release
on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm install

      # Та же жёсткая очистка перед PCS
      - name: Sanitize source (hard)
        run: |
          F=src/Verter.user.js
          perl -CSD -pe 's/[^\x09\x0A\x0D\x20-\x7E]//g' -i "$F"
          awk '{ sub(/\r$/,""); print }' "$F" > "$F.tmp" && mv "$F.tmp" "$F"
          ! grep -nP '[^\x09\x0A\x0D\x20-\x7E]' "$F" || (echo "Non-ASCII remains" && exit 2)

      - name: PCS (syntax + lint + build)
        run: npm run pcs

      - name: Make pack.sh executable
        run: chmod +x pack.sh

      - name: Pack
        run: ./pack.sh

      - name: Read release meta
        run: |
          echo "TAG=$(cat build/RELEASE_TAG.txt)" >> $GITHUB_ENV
          echo "TITLE=$(cat build/RELEASE_TITLE.txt)" >> $GITHUB_ENV

      - name: Upload artifact (named)
        uses: actions/upload-artifact@v4
        with:
          name: verter-named
          path: |
            build/*.zip
            build/ARTIFACT_NAME.txt
            build/RELEASE_TAG.txt
            build/RELEASE_TITLE.txt
          if-no-files-found: error

      - name: Upload artifact (compat)
        uses: actions/upload-artifact@v4
        with:
          name: verter-safe
          path: build/Verter_SAFE.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TITLE }}
          files: build/*.zip
