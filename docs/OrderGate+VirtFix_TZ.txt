Вот обновлённое ТЗ с учётом того, что фактическая версия в коде 2.1, а новая после внедрения правок должна стать 2.2.

---

# ТЗ: OrderGate + VirtFix + правильное имя ZIP

**База:** `Verter ver. 2.1`
**Целевая версия:** `Verter ver. 2.2 (OrderGate+VirtFix)`

---

## 1. Цель

1. Исключить двойные сделки в реальной торговле.
2. Исключить двойные сделки в виртуальной торговле.
3. Обеспечить предсказуемое и понятное имя итогового ZIP-артефакта.

---

## 2. Реализация

### 2.1 Реальная торговля

* Ввести шлюз «OrderGate» с кулдауном (`ORDER_COOLDOWN_MS = 5000`).
* Переменные: `orderLock`, `orderLockTs`.
* Функции:

  * `canOpenRealOrder()`
  * `tryEnterOrderGate(tag)` → возвращает `release(ok?)` или `null`.
* Все вызовы реальных сделок маршрутизировать через `openRealOrderSafe(params)` → внутри вызывает существующую `openRealOrderImpl`.
* Логи:

  * `[ORDER-GATE][ENTER] tag time`
  * `[ORDER-GATE][BLOCK] duplicate prevented`
  * `[ORDER-GATE][EXIT] tag ok|abort`

### 2.2 Дребезг сигналов

* Ввести `isDuplicateSignal(asset, signalId, direction)` с `SIGNAL_DEBOUNCE_MS = 1000`.
* Перед реальной сделкой проверять. При дубле: `[SIGNAL][SKIP] debounce`.

### 2.3 Виртуальная торговля

* Активные сделки хранить в `virtTradesActive: Map`.
* Ключ = `asset|signalId`.
* `openVirtualIfFree(...)`: если уже есть активная сделка по ключу → блокировать, лог `[VIRT][BLOCK] already active]`.
* Успешное открытие → `[VIRT-OPEN] ...`.
* Автозакрытие через 60 сек (`closeVirtual`) → результат `win|loss|return`, лог `[VIRT-CLOSE] ...`.
* После закрытия сделка удаляется из `virtTradesActive` и уходит в статистику.

### 2.4 Порядок вызова

В точке срабатывания сигнала:

1. `openVirtualIfFree(...)`
2. `openRealOrderSafe(...)`

### 2.5 Артефакт ZIP

* Имя должно собираться по шаблону:

  ```
  Verter_ver_2.2_(OrderGate+VirtFix)_YYYYMMDD-HHMM.zip
  ```
* Добавить `pack.sh` или `pack.js` для упаковки.
* В файл `ARTIFACT_NAME.txt` записывать итоговое имя.

---

## 3. Логи

* Только `[ORDER-GATE]`, `[SIGNAL]`, `[VIRT-*]`.
* Короткие и информативные.

---

## 4. Тест-план

1. Два одинаковых сигнала в 1 секунду → `[SIGNAL][SKIP]`, реальная сделка одна.
2. Два параллельных вызова открытия сделки → `[ORDER-GATE][BLOCK]`, ордер один.
3. Виртуальная сделка по одному сигналу до закрытия → `[VIRT][BLOCK]`.
4. Закрытие через 60 сек даёт корректный результат BUY/SELL/>/<.
5. В окне 5000 мс вторая реальная сделка невозможна.
6. ZIP собран с правильным именем, совпадает с `ARTIFACT_NAME.txt`.

---

## 5. Критерии приёмки

* Одна реальная сделка за интервал кулдауна.
* Не более одной виртуальной сделки по сигналу.
* Дребезг сигналов фильтруется.
* Все реальные ордера идут через `openRealOrderSafe`.
* Логи чистые.
* ZIP артефакт называется строго по шаблону.

---

## 6. PCS Preflight-8

* ✔ Синтаксис ESLint.
* ✔ Нет дублей функций.
* ✔ Все вызовы реальных ордеров через шлюз.
* ✔ Virt-блокировки работают.
* ✔ Тайминги: 1с debounce, 5с кулдаун, 60с virt-закрытие.
* ✔ Логи минимальны.
* ✔ ZIP имя корректно.
* ✔ Тест-план выполнен.
